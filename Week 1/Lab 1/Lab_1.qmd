---
title: "Lab 1: Gapminder Data Visualization"
format:
  html:
    embed-resources: true
execute:
  warning: false
  message: false
  execute-dir: file
---

## Task 1
The table below shows the first 5 rows of the dataset `q1`, which give us a preview of the variables we'll be using for visualization in @fig-plot1.
```{python}
#| echo: true
#| code-fold: true
import pandas as pd
q1 = pd.read_csv("Lab 1 Data/q1data.csv")
q1.head()
```

```{python}
#| echo: true
#| code-fold: true
#| label: fig-plot1
#| fig-cap: "Relationship between income and life expectancy."
from plotnine import ggplot, aes, geom_point, theme_minimal, labs, scale_x_continuous, scale_y_continuous
from mizani.formatters import comma_format
(ggplot(q1, aes(x = "income", y = "life_exp", size = "population", color = "four_regions")) 
+ geom_point(alpha=0.7) 
+ theme_minimal()
+ scale_x_continuous(
    trans = "log2",
    breaks = [500, 1000, 2000, 4000, 8000, 16000, 32000, 64000, 1280000],
    labels = comma_format())
+ scale_y_continuous(
    limits=[20,90],
    breaks=range(20, 91, 10)
)
)
```

The graph below demonstrates a plot for the `q1` dataset created using `geom_boxplot` instead of `geom_point`.
```{python}
#| echo: true
#| code-fold: true
from plotnine import geom_boxplot
(
    ggplot(q1, aes(x="income", y="life_exp", fill="four_regions"))
    + geom_boxplot(alpha=0.7)
    + theme_minimal()
    + scale_x_continuous(
    trans = "log2",
    breaks = [500, 1000, 2000, 4000, 8000, 16000, 32000, 64000, 1280000],
    labels = comma_format())
+ scale_y_continuous(
    limits=[20,90],
    breaks=range(20, 91, 10)
)
)

```
This graph isn’t the best choice for visualizing the data, but it still conveys the overall pattern. Like the scatterplot above, it shows that countries with lower incomes tend to have lower life expectancies, while higher incomes are associated with longer life spans. However, the boxplots obscure much of the variation within regions and fail to capture the full spread of incomes across individual countries.

## Task 2
The Table below shows the first 5 rows of the dataset `q2`, which gives us a preview of the variables we'll be using for visualization in @fig-plot2.
```{python}
#| echo: true
#| code-fold: true
q2 = pd.read_csv("Lab 1 Data/q2data.csv")
q2.head()
```

```{python}
#| echo: true
#| code-fold: true
#| label: fig-plot2
#| fig-cap: "Relationship between imports and exports"

(
    ggplot(q2, aes(x = "exports", y = "imports", size = "exports", color = "four_regions"))
    + geom_point(alpha = 0.7)
    + theme_minimal()
    + scale_x_continuous(
        limits = [0, 220],
        breaks = range(0, 221, 20)
    )
    + scale_y_continuous(
        limits=[0, 400],
        breaks = range(0, 401, 50)
    )
)
```
The graph below demonstrates a plot for the `q2` dataset created using `geom_violin` instead of `geom_point`.
```{python}
#| echo: true
#| code-fold: true
from plotnine import geom_violin
(
    ggplot(q2, aes(x = "exports", y = "imports", fill = "four_regions"))
    + geom_violin(alpha = 0.5)
    + theme_minimal()
)
```
This plot is not well-suited for the data because violin plots are primarily designed to display the distribution of a single variable. While they provide some sense of variation within regions, they do not effectively capture the relationship between imports and exports, which was the original focus of the visualization

## Task 3
The Table below shows the first 5 rows of the dataset `q3`, which gives us a preview of the variables we'll be using for visualization in @fig-plot3.
```{python}
#| echo: true
#| code-fold: true
q3 = pd.read_csv("Lab 1 Data/q3data.csv")
q3.head()
```
```{python}
#| echo: true
#| code-fold: true
#| label: fig-plot3
#| fig-cap: "Relationship between imports and exports"
(
    ggplot(q3, aes(x = "internet_users", y = "gdp", size = "internet_users", fill = "four_regions"))
    + geom_point(alpha = 0.7)
    + theme_minimal()
    + scale_x_continuous(
        limits = [0, 90],
        breaks = range(0, 91, 10)
    )
    + scale_y_continuous(
        trans = "log2",
        breaks = [200, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000],
        labels = comma_format()
    )
)

```
The graph below demonstrates a plot for the `q3` dataset created using `geom_SOMETHING` instead of `geom_point`.
```{python}
#| echo: true
#| code-fold: true
from plotnine import geom_smooth
(
    ggplot(q3, aes(x = "internet_users", y = "gdp", color = "four_regions"))
+ geom_smooth(se=False)
+ theme_minimal()
)
```
The line graph made with `geom_smooth` is not a good fit for this dataset. Line graphs are better for showing changes over time, but here the data is cross-sectional and not in a natural order. Connecting the countries with lines suggests a trend that doesn’t really exist. While the graph shows some differences between regions, it hides the spread of individual data points. Overall, the scatterplot does a better job of showing the relationship between GDP and internet users.
